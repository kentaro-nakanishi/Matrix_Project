202305101413

2-変換代数の検証作業を始める前の、MatrixProjectの初期状態を保存しておく。

p4群と呼ばれる概念群に曖昧性があったため、まずはこれを改修する工事をする。



202305101434

p4群の改修工事

co_brother関数を終末条件とmatching規則の組に分離する。
co_brother_check関数は、このco_brother関数の終末条件に吸収されたため削除してもよい。



202305102212

上のリファクタリングにより、
repete射の最初のみの型　の　zero-divideバグがなくなったことを確認。

その後、stretch射を試す。

pitchstructureにも同様のリファクタリングを適用。



202305102227

to_bool変数に(過程A)を実装する手段を考える

DUR関数を定義

make_brother にパラメータを通す

いくつかの不要になったメモやモジュールを削除

その他いろいろなんやかんやあってto_boolのパスを奥まで通す


202305141830

parameter弄り１


bool_pattern を１にしてみた

202305151921

pitch_structureに高度なto_boolのstructureを移殖

202305152138

parameter弄り2

いいの（光のやつ）ができたので一旦保存

time_strctureを０に潰して　p_strの方で色々やってみる実験

動かしてみた感想としては、co_brotherの単一性がめちゃくちゃキモいので修正が必要なのを感じた。。。



202305161049
co_brotherの単一性を修正する。　つまり、co_broter = x を　co_broter.append x に　=None を　= [] に　== None を　==[]に　x.co_broter を　x.co_brother[0] もしくは　for i in x.cobrother: に書き換える
絶対バグが起きて崩壊するので注意して書き換える。

修正の必要がなかった。

そのまま循環変換代数を実装する。

循環変換代数のデバッグは想像以上の時間を要しそうだ。２-変換代数に循環変換代数を埋め込む実装について、写像の関係など曖昧性があり、抽象論の整備が足りなかったかもしれない。


202305212251
バグ取りが終わり。循環-変換代数をtime_structure側に移殖後検証作業をする

202305212335
新たなバグが発生したため取る。循環-変換代数をtime_structure側に移殖後検証作業をする
　　　　　　　　　
「202305212355」という比較検証用のファイルと比べてデバッグ。
co_sister写像を導入したことで、送り先の音が消えてしまう問題を解消したい。


202305221653

バグの原因を発見したため一度前の状態を保存してコピー
chainにバグがあった

202305222011
バグをfix
不要になったadress_to_treeモジュールを削除

cycle_trans木が反映されていない問題に取り組む

202305230117

cycle_trans木が反映されていない問題の継続
co_sister写像ではなく、あくまでco_brother写像として実装することが美しいという結果が得られたのでリファクタリングをする。

リファクタリング完了
matching_patternが上手くいってない問題に気付く。


202305232312

そもそもcycle_trans木が生えている場所に問題があるのではないかという強い思想に行きつく。
C-方式による、joint_nodeというのを間に挟む方法でこれを解決する。

全体的に、cycle_trans木という対象が2-変換代数の理論の中で、どこに埋め込まれるべきなのかにまだ混乱があるようだ。


202305240256

いいのができたので保存。パラメータいじり

202305241643

adressの順番（パリ式、日本式）が混乱していることに気付いた
全て日本式で統一する。

202305241958
matching_patternが上手くいってない問題に対応。
また、matching_patternから終末条件を定められるようにする。

matching_patternを３変数方式でリファクタリング
展開関数の順序がおかしくなってるところを直す

しかし未だに引き戻しが滑らかに繋がらない問題が分からない。。。
イテラブルをリストに変換する問題のせいだった。ブチ切れそう。

parameter弄り　"tanka"作曲

202305251345
cycle_trans系の抱える種々の問題に対処

cycle_trans代数を今の2-変換代数の系の上に実現するためには、
"真のsister"という概念を導入するしかないことに気付いた。

根本的には、循環-変換代数という系に関して抽象論の整備が足りていない、という問題に帰着するのだろう。

2023052562206

joint_nodeの問題は未だに解決しない。
一旦joint_nodeの方式はご破算にして、A方式をもうすこし試してみる。
前回はA方式はco_brotherエラーで狂ったらしいが、たぶん解決策があるはず。

co_brotherが存在しない問題の次はvalが存在しない問題が発生
right_treeを削除しなければ問題なく動作するため、
おそらく、引き戻しが上手くいってない

cycle_trans木を追加したことで、right_tree,left_treeの概念が壊れてしまったのだろうか


Node　> double_trans_alg に間違えを発見する。これだと個別のrootが設定できてない。
この間違えは他のファイルでも普遍的に直さないといけないし、さてどうしたものか。。。


cycle_trans木のrootのバグ問題を解決

202305312218
パラメータ弄りの研究